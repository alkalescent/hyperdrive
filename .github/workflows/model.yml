# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Model Creation

on:
  push:
    branches:
      - feature/strategy-builder
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # - name: Cache pip dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install flake8 pytest coverage
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Decrypt script
        env:
          GPG_PASS: ${{ secrets.GPG_PASS }}
        run: |
          echo "hi this is a secret" >> secret.txt
          gpg --batch --yes --symmetric --cipher-algo AES256 --passphrase=secret --output "secret.txt.gpg" "secret.txt"
          rm secret.txt
          gpg --verbose --batch --yes --decrypt --passphrase=secret --output "secret.txt" "secret.txt.gpg"
          cat secret.txt
        # gpg --version
        # gpgconf --kill gpg-agent
        # mkdir -p ~/.gnupg
        # echo $'default-cache-ttl 1\nmax-cache-ttl 1' >> ~/.gnupg/gpg-agent.conf
        # gpg --verbose --batch --yes --decrypt --passphrase=${GPG_KEY} --output "encrypted/create_model.py" "encrypted/create_model.py.gpg"

        # gpgconf --reload gpg-agent && cat ~/.gnupg/gpg-agent.conf

      - name: Create model
        env:
          WINDOW: ${{ 7 }}
          # EXTRA: ${{ matrix.extra }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          python encrypted/create_model.py
